(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{438:function(t,a,i){"use strict";i.r(a);var e=i(32),g=Object(e.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"an-annoying-pitfall-about-git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#an-annoying-pitfall-about-git"}},[t._v("#")]),t._v(" An annoying pitfall about Git")]),t._v(" "),i("h2",{attrs:{id:"刚开始使用github和git时-你可能会按以下-错误-步骤操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#刚开始使用github和git时-你可能会按以下-错误-步骤操作"}},[t._v("#")]),t._v(" 刚开始使用github和git时，你可能会按以下（错误）步骤操作：")]),t._v(" "),i("p",[t._v("创建一个仓库，命名，描述，然后添加README和license。")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101731821.png",alt:"image-20210320163549926"}})]),t._v(" "),i("p",[i("u",[t._v("这里我们注意最后一句话")]),t._v("：")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101732686.png",alt:"image-20210320163815342"}})]),t._v(" "),i("p",[t._v("github告诉我们它将会为我们的新仓库创建"),i("strong",[t._v("main")]),t._v("作为默认的branch。")]),t._v(" "),i("p",[t._v("然后我们的新仓库就创建好了，同时，我们希望在本地也创建一个文件夹与这个仓库建立联系，这样我们就可以在本机的command使用git直接向远程仓库commit我们的代码，而不用打开github。")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101732475.png",alt:"image-20210320164307599"}})]),t._v(" "),i("p",[t._v("这里我在d盘创建了一个example文件夹作为本地仓库的载体（默认git已经安装并配置好了），")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101732067.png",alt:"image-20210320164412913"}})]),t._v(" "),i("p",[t._v("执行 "),i("code",[t._v("git init")]),t._v(" 指令在这个文件夹创建了一个仓库。")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733352.png",alt:"image-20210320164758304"}})]),t._v(" "),i("p",[t._v("随后我在example文件夹中创建一个新文件hello world.txt，现在我希望commit本次更改到我刚刚创建好的github仓库，首先我复制了我远程仓库的地址：")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101732160.png",alt:"image-20210320164932154"}})]),t._v(" "),i("p",[t._v("执行"),i("code",[t._v("git remote add ... ......")]),t._v("指令与远程仓库的建立连接：")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733456.png",alt:"image-20210320165044155"}})]),t._v(" "),i("p",[t._v("然后"),i("code",[t._v("git add .")]),t._v("提交到缓冲区，"),i("code",[t._v('git commit -m "..."')]),t._v("提交commit，一切"),i("strong",[t._v("看起来那么顺利")]),t._v("，只需最后"),i("strong",[t._v("git push")]),t._v(" 就愉快的结束了。")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733542.png",alt:"image-20210320165428327"}})]),t._v(" "),i("p",[t._v("这里我们还记得github为我们创建的默认分支"),i("strong",[t._v("main")]),t._v("，我们push到这个分支。")]),t._v(" "),i("p",[t._v("糟糕的部分来了：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("error: src refspec main does not match any\n")])])]),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733563.png",alt:"image-20210320165628338"}})]),t._v(" "),i("h2",{attrs:{id:"接下来我们分析上面步骤错误的原因"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#接下来我们分析上面步骤错误的原因"}},[t._v("#")]),t._v(" 接下来我们分析上面步骤错误的原因：")]),t._v(" "),i("ol",[i("li",[i("p",[i("strong",[t._v("mian")]),t._v(" 和 "),i("strong",[t._v("master")])]),t._v(" "),i("p",[t._v("你可能已经注意到了，在我们每次使用git指令时，git都在一直用蓝色的字提示我们当前处在一个叫"),i("strong",[t._v("master")]),t._v("的分支：")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733574.png",alt:"image-20210320170106554"}})])])]),t._v(" "),i("p",[t._v("这是git为我们创建的默认分支，而在上述过程中我们完全无视了这一点，我们只关心github上的那个"),i("strong",[t._v("main")]),t._v("分支，至于为什么它们的默认分支不同，github给出的解释是：")]),t._v(" "),i("blockquote",[i("p",[t._v('GitHub is working on replacing the term "master" on its service with a neutral term like "main" to avoid any unnecessary references to slavery')])]),t._v(" "),i("p",[t._v("github觉得"),i("strong",[t._v("master")]),t._v("有点slavery那味。")]),t._v(" "),i("p",[t._v("所以原因就是github的仓库中没有"),i("strong",[t._v("master")]),t._v("这个分支，我们本地的仓库没有"),i("strong",[t._v("main")]),t._v("分支，那好办，我们将本地仓库的"),i("strong",[t._v("master")]),t._v("分支改名为"),i("strong",[t._v("main")]),t._v("分支，它们不就统一了？")]),t._v(" "),i("img",{staticStyle:{zoom:"150%"},attrs:{src:"http://img.gxyhero.top/img/202108101733045.png",alt:"image-20210320171047682"}}),t._v(" "),i("p",[t._v("执行"),i("code",[t._v("git branch -m master main")]),t._v("，可以看到"),i("strong",[t._v("master")]),t._v("已经被成功改为"),i("strong",[t._v("main")]),t._v("了，如此，我们继续push就不会有什么问题了吧？")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733562.png",alt:"image-20210320171245755"}})]),t._v(" "),i("ol",{attrs:{start:"2"}},[i("li",[i("strong",[t._v("! [rejected]        main -> main (non-fast-forward)")])])]),t._v(" "),i("p",[t._v("这个问题解释起来很简单，还记得我们创建仓库时添加到README和license吗？"),i("u",[t._v("在github仓库的"),i("strong",[t._v("main")]),t._v("分支中有这两个文件，而在我们本地的仓库并没有这两个文件")]),t._v("，如果我们执行这次commit，那么可能导致这两个文件丢失。")]),t._v(" "),i("p",[t._v("接下来你有以下几个解决方案："),i("strong",[t._v("下列代码中的example为远程仓库名称")])]),t._v(" "),i("ol",[i("li",[i("p",[t._v("无视警告，README和license我不要了。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("git push --force\n")])])]),i("p",[t._v("执行以上指令强行提交。")])]),t._v(" "),i("li",[i("p",[t._v("试着获取远程仓库的初始提交( initial commit)，就是README和license这两个文件的commit，在此基础上 rebase commit。但是这种方法可能有点棘手，不如暴力提交简单。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("git fetch example //获取初始提交\ngit rebase example/mian \n")])])])]),t._v(" "),i("li",[i("p",[t._v("试着合并初始提交与你的提交,这也是我"),i("strong",[t._v("最推荐的方法")]),t._v("：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("git fetch example\ngit merge --allow-unrelated-histories example/main\n")])])]),i("p",[t._v("首先执行"),i("code",[t._v("git fetch example")]),t._v(" 获取初始提交")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101733586.png",alt:"image-20210320175151028"}})]),t._v(" "),i("p",[t._v("然后执行"),i("code",[t._v("git merge --allow-unrelated-histories example/main")]),t._v("合并，之后会进入这样一个文件，提示我们为本次提交加一些信息备注，我们很清楚我们在做什么，所以按两下ESC键，输入**:wq**（注意有冒号，这是UNIX保存的命令），回车")])])]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101734964.png",alt:"image-20210320174948306"}})]),t._v(" "),i("p",[t._v("可以看到本地的git仓库已经与远程仓库合并了，README和license也可以在本地仓库找到了。")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101734169.png",alt:"image-20210320175828773"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101734358.png",alt:"image-20210320175837987"}})]),t._v(" "),i("p",[t._v("最后我们"),i("code",[t._v("git push example main")])]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101734273.png",alt:"image-20210320175910525"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"http://img.gxyhero.top/img/202108101734607.png",alt:"image-20210320175927561"}})]),t._v(" "),i("p",[t._v("终于提交成功了，泪目！！！！")]),t._v(" "),i("h2",{attrs:{id:"真确的使用方式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#真确的使用方式"}},[t._v("#")]),t._v(" 真确的使用方式：")]),t._v(" "),i("p",[t._v("github创建仓库后使用"),i("code",[t._v("git clone")]),t._v("指令clone到本地。")]),t._v(" "),i("h2",{attrs:{id:"参考文章"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章：")]),t._v(" "),i("blockquote",[i("p",[t._v("https://stackoverflow.com/questions/65173291/git-push-error-src-refspec-main-does-not-match-any-on-linux")])])])}),[],!1,null,null,null);a.default=g.exports}}]);